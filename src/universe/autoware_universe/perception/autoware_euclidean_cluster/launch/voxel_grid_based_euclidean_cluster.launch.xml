<?xml version="1.0"?>
<launch>
  <arg name="input_pointcloud" default="/perception/obstacle_segmentation/pointcloud"/>
  <arg name="input_map" default="/map/pointcloud_map"/>
  <arg name="output_clusters" default="clusters"/>
  <arg name="use_low_height_cropbox" default="false"/>
  <arg name="voxel_grid_based_euclidean_param_path" default="$(find-pkg-share autoware_euclidean_cluster)/config/voxel_grid_based_euclidean_cluster.param.yaml"/>
  <arg name="use_pointcloud_container" default="false"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>

  <include file="$(find-pkg-share autoware_euclidean_cluster)/launch/voxel_grid_based_euclidean_cluster.launch.py">
    <arg name="input_pointcloud" value="$(var input_pointcloud)"/>
    <arg name="input_map" value="$(var input_map)"/>
    <arg name="output_clusters" value="$(var output_clusters)"/>
    <arg name="use_low_height_cropbox" value="$(var use_low_height_cropbox)"/>
    <arg name="voxel_grid_based_euclidean_param_path" value="$(var voxel_grid_based_euclidean_param_path)"/>

    <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
    <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
  </include>
</launch>
